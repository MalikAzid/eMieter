<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountCreateSuccessfully" xml:space="preserve">
    <value>Your account has been created successfully.</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Add House" xml:space="preserve">
    <value>Add House</value>
  </data>
  <data name="Add Rental Property" xml:space="preserve">
    <value>Add Rental Property</value>
  </data>
  <data name="Add User" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="Add/Edit House" xml:space="preserve">
    <value>Add/Edit House</value>
  </data>
  <data name="Add/Edit Rental Property" xml:space="preserve">
    <value>Add/Edit Rental Property</value>
  </data>
  <data name="Add/Edit User" xml:space="preserve">
    <value>Add/Edit User</value>
  </data>
  <data name="Add/EditTenancy" xml:space="preserve">
    <value>Add/Edit Tenancy</value>
  </data>
  <data name="Add/EditTenant" xml:space="preserve">
    <value>Add/Edit Tenant</value>
  </data>
  <data name="AddTenancy" xml:space="preserve">
    <value>Add Tenancy</value>
  </data>
  <data name="AddTenant" xml:space="preserve">
    <value>Add Tenant</value>
  </data>
  <data name="AllRequiredFields" xml:space="preserve">
    <value>Please fill all required fields.</value>
  </data>
  <data name="AlreadyRegistered" xml:space="preserve">
    <value>Already Registered?</value>
  </data>
  <data name="Are you sure?" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Change Language</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Created Date" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>Create new account?</value>
  </data>
  <data name="DateOfBirth" xml:space="preserve">
    <value>Date Of Birth</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailExist" xml:space="preserve">
    <value>Email already exist in system.</value>
  </data>
  <data name="EmailPasswordIncorrect" xml:space="preserve">
    <value>Email or Password is incorrect.</value>
  </data>
  <data name="EndDateGreaterThan" xml:space="preserve">
    <value>Rental end date should be greater than rental start date.</value>
  </data>
  <data name="EWID" xml:space="preserve">
    <value>EWID</value>
  </data>
  <data name="FillEmail" xml:space="preserve">
    <value>Please fill in your email</value>
  </data>
  <data name="FillPassword" xml:space="preserve">
    <value>Please fill in your password</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Floor" xml:space="preserve">
    <value>Floor</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Living Area Square Meters" xml:space="preserve">
    <value>Living Area Square Meters</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Manage House" xml:space="preserve">
    <value>Manage House</value>
  </data>
  <data name="Manage Rental Property" xml:space="preserve">
    <value>Manage Rental Property</value>
  </data>
  <data name="Manage Users" xml:space="preserve">
    <value>Manage Users</value>
  </data>
  <data name="ManageHouseDetail" xml:space="preserve">
    <value>Manage House Detail</value>
  </data>
  <data name="ManageRentalPropertyDetail" xml:space="preserve">
    <value>Manage Rental Property Detail</value>
  </data>
  <data name="ManageTenancy" xml:space="preserve">
    <value>Manage Tenancy</value>
  </data>
  <data name="ManageTenancyDetail" xml:space="preserve">
    <value>Manage Tenancy Detail</value>
  </data>
  <data name="ManageTenant" xml:space="preserve">
    <value>Manage Tenant</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PostCode" xml:space="preserve">
    <value>PostCode</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Rental Property" xml:space="preserve">
    <value>Rental Property</value>
  </data>
  <data name="RentalAdditionalCostsAkonto" xml:space="preserve">
    <value>Rental Additional Costs Akonto</value>
  </data>
  <data name="RentalCostNetMonthly" xml:space="preserve">
    <value>Rental Cost Net Monthly</value>
  </data>
  <data name="RentalEndDate" xml:space="preserve">
    <value>Rental End Date</value>
  </data>
  <data name="RentalStartDate" xml:space="preserve">
    <value>Rental Start Date</value>
  </data>
  <data name="Room Count" xml:space="preserve">
    <value>Room Count</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="StayLogin" xml:space="preserve">
    <value>Stay Logged In</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="TenancyisActive" xml:space="preserve">
    <value>Tenancy is already active in this duration.</value>
  </data>
  <data name="Tenant" xml:space="preserve">
    <value>Tenant</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="you want to delete this record!" xml:space="preserve">
    <value>you want to delete this record!</value>
  </data>
  <data name="Your has been saved successfully." xml:space="preserve">
    <value>Your has been saved successfully.</value>
  </data>
  <data name="Your record has been deleted." xml:space="preserve">
    <value>Your record has been deleted.</value>
  </data>
</root>